<?xml version="1.0" encoding="utf-8"?>
<configuration>
<system.webServer>
<!-- Compression and Cache of content-->
    <urlCompression doStaticCompression="true" doDynamicCompression="true" />
<staticContent>
			<clientCache cacheControlCustom="private, no-cache"/>
			<mimeMap fileExtension="woff" mimeType="application/font-woff" />
            <mimeMap fileExtension="woff2" mimeType="application/font-woff" />
    </staticContent>
<rewrite>
	<rules>
	<!-- redirect naked domain to to www -->
	<rule name="Redirect to www" stopProcessing="true">
      <match url="(.*)" />
      <conditions trackAllCaptures="false">
        <add input="{HTTP_HOST}" pattern="^example.com$" />
      </conditions>
	  <action type="Redirect" url="https://www.example.com/{R:1}" />
    </rule>
	<!-- redirect HTTP to HTTPS -->
	  	<rule name="RedirectHTTPS" stopProcessing="true">
          <match url="(.*)" />
          <conditions>
          <add input="{HTTPS}" pattern="off" ignoreCase="true" />
          </conditions>
          <action type="Redirect" url="https://{HTTP_HOST}/{R:1}" appendQueryString="true" redirectType="Permanent" />
        </rule>
	<!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
		<rule name="StaticContent">
		<match url="index.html" />
		<action type="Rewrite" url="{REQUEST_URI}"/>
	</rule>
 <!-- All other URLs are mapped to the node.js site entry point -->
	<rule name="DynamicContent" stopProcessing="true">
        <match url=".*" />
            <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
		</conditions>
		<action type="Rewrite" url="/index.html"/>
	</rule>
	</rules>
<!-- SecurityRules -->
	<outboundRules>
	<!-- Strict-Transport-Security -->
	    <rule name="Add Strict-Transport-Security when HTTPS" enabled="true">
        <match serverVariable="RESPONSE_Strict_Transport_Security"
            pattern=".*" />
            <conditions>
                <add input="{HTTPS}" pattern="on" ignoreCase="true" />
            </conditions>
        <action type="Rewrite" value="max-age=31536000" />
        </rule>
	<!-- Content Security -->
		<rule name="Content Security Policy">
          <match serverVariable="RESPONSE_Content-Security-Policy" pattern=".*" />
          <action type="Rewrite" value="script-src 'self' https://code.jquery.com/ https://*.zendesk.com/  https://www.google-analytics.com https://ajax.googleapis.com https://*.twitter.com https://cdn.syndication.twimg.com 'unsafe-inline';"/>
        </rule>
    </outboundRules>
 </rewrite>
 <security>
	<!-- Removes Server header in IIS10 or later and also in Azure Web Apps -->
        <requestFiltering removeServerHeader= "true" >
        	<hiddenSegments>
          		<add segment=".git"/>
        	</hiddenSegments>
        </requestFiltering>
    </security>
 <httpProtocol>
      <customHeaders>
        <clear /> <!-- Gets rid of the other unwanted headers -->
        <add name="X-Frame-Options" value="SAMEORIGIN" />
        <add name="X-Xss-Protection" value="1; mode=block" />
        <add name="X-Content-Type-Options" value="nosniff" />
		<add name="Referrer-Policy" value="no-referrer-when-downgrade" />
      </customHeaders>
      <redirectHeaders>
        <clear />
      </redirectHeaders>
    </httpProtocol>
 <!-- Make sure error responses are left untouched -->
<httpErrors existingResponse="PassThrough" />
	</system.webServer>
 </configuration>
